#!/usr/bin/env bash

# Get the current disk usage
# Taken from NeoFetch
#
# Disk
# Which disks to display.
# The values can be any /dev/sdXX, mount point or directory.
# NOTE: By default we only show the disk info for '/'.
#
# Default: '/'
# Values:  '/', '/dev/sdXX', '/path/to/drive'.
# Flag:    --disk_show
#
# Example:
# disk_show=('/' '/dev/sdb1'):
#      'Disk (/): 74G / 118G (66%)'
#      'Disk (/mnt/Videos): 823G / 893G (93%)'
#
# disk_show=('/'):
#      'Disk (/): 74G / 118G (66%)'
#
disk_show=('/')

# Disk subtitle.
# What to append to the Disk subtitle.
#
# Default: 'mount'
# Values:  'mount', 'name', 'dir', 'none'
# Flag:    --disk_subtitle
#
# Example:
# name:   'Disk (/dev/sda1): 74G / 118G (66%)'
#         'Disk (/dev/sdb2): 74G / 118G (66%)'
#
# mount:  'Disk (/): 74G / 118G (66%)'
#         'Disk (/mnt/Local Disk): 74G / 118G (66%)'
#         'Disk (/mnt/Videos): 74G / 118G (66%)'
#
# dir:    'Disk (/): 74G / 118G (66%)'
#         'Disk (Local Disk): 74G / 118G (66%)'
#         'Disk (Videos): 74G / 118G (66%)'
#
# none:   'Disk: 74G / 118G (66%)'
#         'Disk: 74G / 118G (66%)'
#         'Disk: 74G / 118G (66%)'
disk_subtitle="mount"

# Disk percent.
# Show/Hide disk percent.
#
# Default: 'on'
# Values:  'on', 'off'
# Flag:    --disk_percent
#
# Example:
# on:  'Disk (/): 74G / 118G (66%)'
# off: 'Disk (/): 74G / 118G'
disk_percent="on"

# Info display
# Display a bar with the info.
#
# Default: 'off'
# Values:  'bar', 'infobar', 'barinfo', 'off'
#
# Example:
# bar:     '[---=======]'
# infobar: 'info [---=======]'
# barinfo: '[---=======] info'
# off:     'info'
disk_display="barinfo"

get_disk() {

    type -p df &>/dev/null ||
        { err "Disk requires 'df' to function. Install 'df' to get disk info."; return; }

    df_version=$(df --version 2>&1)

    case $df_version in
        *IMitv*)   df_flags=(-P -g) ;; # AIX
        *befhikm*) df_flags=(-P -k) ;; # IRIX
        *hiklnP*)  df_flags=(-h)    ;; # OpenBSD

        *Tracker*) # Haiku
            err "Your version of df cannot be used due to the non-standard flags"
            return
        ;;

        *) df_flags=(-P -h) ;;
    esac

    # Create an array called 'disks' where each element is a separate line from
    # df's output. We then unset the first element which removes the column titles.
    IFS=$'\n' read -d "" -ra disks <<< "$(df "${df_flags[@]}" "${disk_show[@]:-/}")"
    unset "disks[0]"

    # Stop here if 'df' fails to print disk info.
    [[ ${disks[*]} ]] || {
        err "Disk: df failed to print the disks, make sure the disk_show array is set properly."
        return
    }

    for disk in "${disks[@]}"; do
    
        # Create a second array and make each element split at whitespace this time.
        IFS=" " read -ra disk_info <<< "$disk"
        # disk_perc=${disk_info[-2]/\%}
        disk_location=${disk_info[*]: -1:1}
        disk_perc=$(echo ${disk_info[*]: -2:1} | sed 's/\%//')
        disk_usage=${disk_info[*]: -4:1}
        disk_space=${disk_info[*]: -5:1}

        case $disk_percent in
            off) disk_perc=
        esac

        case $df_version in
            *befhikm*)
                DISK="$((disk_usage/1024/1024))G / $((disk_space/1024/1024))G"
                DISK+="${disk_perc:+ ($disk_perc%%)}"
            ;;

            *)
                DISK="${disk_usage/i} / ${disk_space/i}${disk_perc:+ ($disk_perc%%)}"
            ;;
        esac

        case $disk_subtitle in
            name)
                disk_sub=${disk_info[*]::${#disk_info[@]}-5}
            ;;

            dir)
                disk_sub=${disk_info[-1]/*\/}
                disk_sub=${disk_sub:-${disk_info[-1]}}
            ;;

            none) ;;

            *)
                disk_sub=${disk_location}
            ;;
        esac

        case $disk_display in
            bar)     DISK="$(bar "$disk_perc" "100")" ;;
            infobar) DISK+=" $(bar "$disk_perc" "100")" ;;
            barinfo) DISK="$(bar "$disk_perc" "100") $DISK" ;;
            perc)    DISK="${disk_perc}%% $(bar "$disk_perc" "100")" ;;
        esac

    done
}